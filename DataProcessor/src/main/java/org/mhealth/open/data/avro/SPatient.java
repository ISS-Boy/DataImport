/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.mhealth.open.data.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SPatient extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6383054889651678281L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SPatient\",\"namespace\":\"org.mhealth.open.data.avro\",\"fields\":[{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"birthdate\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"deathdate\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"gender\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"race\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"birthplace\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"address\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SPatient> ENCODER =
      new BinaryMessageEncoder<SPatient>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SPatient> DECODER =
      new BinaryMessageDecoder<SPatient>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SPatient> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SPatient> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SPatient>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this SPatient to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a SPatient from a ByteBuffer. */
  public static SPatient fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long timestamp;
  @Deprecated public java.lang.String user_id;
  @Deprecated public java.lang.String name;
  @Deprecated public java.lang.String birthdate;
  @Deprecated public java.lang.String deathdate;
  @Deprecated public java.lang.String gender;
  @Deprecated public java.lang.String race;
  @Deprecated public java.lang.String birthplace;
  @Deprecated public java.lang.String address;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SPatient() {}

  /**
   * All-args constructor.
   * @param timestamp The new value for timestamp
   * @param user_id The new value for user_id
   * @param name The new value for name
   * @param birthdate The new value for birthdate
   * @param deathdate The new value for deathdate
   * @param gender The new value for gender
   * @param race The new value for race
   * @param birthplace The new value for birthplace
   * @param address The new value for address
   */
  public SPatient(java.lang.Long timestamp, java.lang.String user_id, java.lang.String name, java.lang.String birthdate, java.lang.String deathdate, java.lang.String gender, java.lang.String race, java.lang.String birthplace, java.lang.String address) {
    this.timestamp = timestamp;
    this.user_id = user_id;
    this.name = name;
    this.birthdate = birthdate;
    this.deathdate = deathdate;
    this.gender = gender;
    this.race = race;
    this.birthplace = birthplace;
    this.address = address;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return timestamp;
    case 1: return user_id;
    case 2: return name;
    case 3: return birthdate;
    case 4: return deathdate;
    case 5: return gender;
    case 6: return race;
    case 7: return birthplace;
    case 8: return address;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: timestamp = (java.lang.Long)value$; break;
    case 1: user_id = (java.lang.String)value$; break;
    case 2: name = (java.lang.String)value$; break;
    case 3: birthdate = (java.lang.String)value$; break;
    case 4: deathdate = (java.lang.String)value$; break;
    case 5: gender = (java.lang.String)value$; break;
    case 6: race = (java.lang.String)value$; break;
    case 7: birthplace = (java.lang.String)value$; break;
    case 8: address = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'user_id' field.
   * @return The value of the 'user_id' field.
   */
  public java.lang.String getUserId() {
    return user_id;
  }

  /**
   * Sets the value of the 'user_id' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.String value) {
    this.user_id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'birthdate' field.
   * @return The value of the 'birthdate' field.
   */
  public java.lang.String getBirthdate() {
    return birthdate;
  }

  /**
   * Sets the value of the 'birthdate' field.
   * @param value the value to set.
   */
  public void setBirthdate(java.lang.String value) {
    this.birthdate = value;
  }

  /**
   * Gets the value of the 'deathdate' field.
   * @return The value of the 'deathdate' field.
   */
  public java.lang.String getDeathdate() {
    return deathdate;
  }

  /**
   * Sets the value of the 'deathdate' field.
   * @param value the value to set.
   */
  public void setDeathdate(java.lang.String value) {
    this.deathdate = value;
  }

  /**
   * Gets the value of the 'gender' field.
   * @return The value of the 'gender' field.
   */
  public java.lang.String getGender() {
    return gender;
  }

  /**
   * Sets the value of the 'gender' field.
   * @param value the value to set.
   */
  public void setGender(java.lang.String value) {
    this.gender = value;
  }

  /**
   * Gets the value of the 'race' field.
   * @return The value of the 'race' field.
   */
  public java.lang.String getRace() {
    return race;
  }

  /**
   * Sets the value of the 'race' field.
   * @param value the value to set.
   */
  public void setRace(java.lang.String value) {
    this.race = value;
  }

  /**
   * Gets the value of the 'birthplace' field.
   * @return The value of the 'birthplace' field.
   */
  public java.lang.String getBirthplace() {
    return birthplace;
  }

  /**
   * Sets the value of the 'birthplace' field.
   * @param value the value to set.
   */
  public void setBirthplace(java.lang.String value) {
    this.birthplace = value;
  }

  /**
   * Gets the value of the 'address' field.
   * @return The value of the 'address' field.
   */
  public java.lang.String getAddress() {
    return address;
  }

  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(java.lang.String value) {
    this.address = value;
  }

  /**
   * Creates a new SPatient RecordBuilder.
   * @return A new SPatient RecordBuilder
   */
  public static org.mhealth.open.data.avro.SPatient.Builder newBuilder() {
    return new org.mhealth.open.data.avro.SPatient.Builder();
  }

  /**
   * Creates a new SPatient RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SPatient RecordBuilder
   */
  public static org.mhealth.open.data.avro.SPatient.Builder newBuilder(org.mhealth.open.data.avro.SPatient.Builder other) {
    return new org.mhealth.open.data.avro.SPatient.Builder(other);
  }

  /**
   * Creates a new SPatient RecordBuilder by copying an existing SPatient instance.
   * @param other The existing instance to copy.
   * @return A new SPatient RecordBuilder
   */
  public static org.mhealth.open.data.avro.SPatient.Builder newBuilder(org.mhealth.open.data.avro.SPatient other) {
    return new org.mhealth.open.data.avro.SPatient.Builder(other);
  }

  /**
   * RecordBuilder for SPatient instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SPatient>
    implements org.apache.avro.data.RecordBuilder<SPatient> {

    private long timestamp;
    private java.lang.String user_id;
    private java.lang.String name;
    private java.lang.String birthdate;
    private java.lang.String deathdate;
    private java.lang.String gender;
    private java.lang.String race;
    private java.lang.String birthplace;
    private java.lang.String address;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.mhealth.open.data.avro.SPatient.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[0].schema(), other.timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.user_id)) {
        this.user_id = data().deepCopy(fields()[1].schema(), other.user_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.birthdate)) {
        this.birthdate = data().deepCopy(fields()[3].schema(), other.birthdate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.deathdate)) {
        this.deathdate = data().deepCopy(fields()[4].schema(), other.deathdate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.gender)) {
        this.gender = data().deepCopy(fields()[5].schema(), other.gender);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.race)) {
        this.race = data().deepCopy(fields()[6].schema(), other.race);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.birthplace)) {
        this.birthplace = data().deepCopy(fields()[7].schema(), other.birthplace);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.address)) {
        this.address = data().deepCopy(fields()[8].schema(), other.address);
        fieldSetFlags()[8] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing SPatient instance
     * @param other The existing instance to copy.
     */
    private Builder(org.mhealth.open.data.avro.SPatient other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[0].schema(), other.timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.user_id)) {
        this.user_id = data().deepCopy(fields()[1].schema(), other.user_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.birthdate)) {
        this.birthdate = data().deepCopy(fields()[3].schema(), other.birthdate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.deathdate)) {
        this.deathdate = data().deepCopy(fields()[4].schema(), other.deathdate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.gender)) {
        this.gender = data().deepCopy(fields()[5].schema(), other.gender);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.race)) {
        this.race = data().deepCopy(fields()[6].schema(), other.race);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.birthplace)) {
        this.birthplace = data().deepCopy(fields()[7].schema(), other.birthplace);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.address)) {
        this.address = data().deepCopy(fields()[8].schema(), other.address);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public org.mhealth.open.data.avro.SPatient.Builder setTimestamp(long value) {
      validate(fields()[0], value);
      this.timestamp = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public org.mhealth.open.data.avro.SPatient.Builder clearTimestamp() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_id' field.
      * @return The value.
      */
    public java.lang.String getUserId() {
      return user_id;
    }

    /**
      * Sets the value of the 'user_id' field.
      * @param value The value of 'user_id'.
      * @return This builder.
      */
    public org.mhealth.open.data.avro.SPatient.Builder setUserId(java.lang.String value) {
      validate(fields()[1], value);
      this.user_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'user_id' field has been set.
      * @return True if the 'user_id' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'user_id' field.
      * @return This builder.
      */
    public org.mhealth.open.data.avro.SPatient.Builder clearUserId() {
      user_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public org.mhealth.open.data.avro.SPatient.Builder setName(java.lang.String value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public org.mhealth.open.data.avro.SPatient.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'birthdate' field.
      * @return The value.
      */
    public java.lang.String getBirthdate() {
      return birthdate;
    }

    /**
      * Sets the value of the 'birthdate' field.
      * @param value The value of 'birthdate'.
      * @return This builder.
      */
    public org.mhealth.open.data.avro.SPatient.Builder setBirthdate(java.lang.String value) {
      validate(fields()[3], value);
      this.birthdate = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'birthdate' field has been set.
      * @return True if the 'birthdate' field has been set, false otherwise.
      */
    public boolean hasBirthdate() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'birthdate' field.
      * @return This builder.
      */
    public org.mhealth.open.data.avro.SPatient.Builder clearBirthdate() {
      birthdate = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'deathdate' field.
      * @return The value.
      */
    public java.lang.String getDeathdate() {
      return deathdate;
    }

    /**
      * Sets the value of the 'deathdate' field.
      * @param value The value of 'deathdate'.
      * @return This builder.
      */
    public org.mhealth.open.data.avro.SPatient.Builder setDeathdate(java.lang.String value) {
      validate(fields()[4], value);
      this.deathdate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'deathdate' field has been set.
      * @return True if the 'deathdate' field has been set, false otherwise.
      */
    public boolean hasDeathdate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'deathdate' field.
      * @return This builder.
      */
    public org.mhealth.open.data.avro.SPatient.Builder clearDeathdate() {
      deathdate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'gender' field.
      * @return The value.
      */
    public java.lang.String getGender() {
      return gender;
    }

    /**
      * Sets the value of the 'gender' field.
      * @param value The value of 'gender'.
      * @return This builder.
      */
    public org.mhealth.open.data.avro.SPatient.Builder setGender(java.lang.String value) {
      validate(fields()[5], value);
      this.gender = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'gender' field has been set.
      * @return True if the 'gender' field has been set, false otherwise.
      */
    public boolean hasGender() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'gender' field.
      * @return This builder.
      */
    public org.mhealth.open.data.avro.SPatient.Builder clearGender() {
      gender = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'race' field.
      * @return The value.
      */
    public java.lang.String getRace() {
      return race;
    }

    /**
      * Sets the value of the 'race' field.
      * @param value The value of 'race'.
      * @return This builder.
      */
    public org.mhealth.open.data.avro.SPatient.Builder setRace(java.lang.String value) {
      validate(fields()[6], value);
      this.race = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'race' field has been set.
      * @return True if the 'race' field has been set, false otherwise.
      */
    public boolean hasRace() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'race' field.
      * @return This builder.
      */
    public org.mhealth.open.data.avro.SPatient.Builder clearRace() {
      race = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'birthplace' field.
      * @return The value.
      */
    public java.lang.String getBirthplace() {
      return birthplace;
    }

    /**
      * Sets the value of the 'birthplace' field.
      * @param value The value of 'birthplace'.
      * @return This builder.
      */
    public org.mhealth.open.data.avro.SPatient.Builder setBirthplace(java.lang.String value) {
      validate(fields()[7], value);
      this.birthplace = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'birthplace' field has been set.
      * @return True if the 'birthplace' field has been set, false otherwise.
      */
    public boolean hasBirthplace() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'birthplace' field.
      * @return This builder.
      */
    public org.mhealth.open.data.avro.SPatient.Builder clearBirthplace() {
      birthplace = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'address' field.
      * @return The value.
      */
    public java.lang.String getAddress() {
      return address;
    }

    /**
      * Sets the value of the 'address' field.
      * @param value The value of 'address'.
      * @return This builder.
      */
    public org.mhealth.open.data.avro.SPatient.Builder setAddress(java.lang.String value) {
      validate(fields()[8], value);
      this.address = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'address' field has been set.
      * @return True if the 'address' field has been set, false otherwise.
      */
    public boolean hasAddress() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'address' field.
      * @return This builder.
      */
    public org.mhealth.open.data.avro.SPatient.Builder clearAddress() {
      address = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SPatient build() {
      try {
        SPatient record = new SPatient();
        record.timestamp = fieldSetFlags()[0] ? this.timestamp : (java.lang.Long) defaultValue(fields()[0]);
        record.user_id = fieldSetFlags()[1] ? this.user_id : (java.lang.String) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.String) defaultValue(fields()[2]);
        record.birthdate = fieldSetFlags()[3] ? this.birthdate : (java.lang.String) defaultValue(fields()[3]);
        record.deathdate = fieldSetFlags()[4] ? this.deathdate : (java.lang.String) defaultValue(fields()[4]);
        record.gender = fieldSetFlags()[5] ? this.gender : (java.lang.String) defaultValue(fields()[5]);
        record.race = fieldSetFlags()[6] ? this.race : (java.lang.String) defaultValue(fields()[6]);
        record.birthplace = fieldSetFlags()[7] ? this.birthplace : (java.lang.String) defaultValue(fields()[7]);
        record.address = fieldSetFlags()[8] ? this.address : (java.lang.String) defaultValue(fields()[8]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SPatient>
    WRITER$ = (org.apache.avro.io.DatumWriter<SPatient>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SPatient>
    READER$ = (org.apache.avro.io.DatumReader<SPatient>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
